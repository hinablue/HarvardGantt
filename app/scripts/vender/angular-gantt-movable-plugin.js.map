{"version":3,"sources":["../src/plugins/movable.js","../src/plugins/movable/movableOptions.factory.js"],"names":[],"mappings":"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","file":"angular-gantt-movable-plugin.js","sourcesContent":["(function(){\n    'use strict';\n    angular.module('gantt.movable', ['gantt']).directive('ganttMovable', ['ganttMouseButton', 'ganttMouseOffset', 'ganttSmartEvent', 'ganttMovableOptions', 'ganttUtils', '$window', '$document', '$timeout',\n        function(mouseButton, mouseOffset, smartEvent, movableOptions, utils, $window, $document, $timeout) {\n            // Provides moving and resizing of tasks\n            return {\n                restrict: 'E',\n                require: '^gantt',\n                scope: {\n                    enabled: '=?',\n                    allowMoving: '=?',\n                    allowResizing: '=?',\n                    allowRowSwitching: '=?'\n                },\n                link: function(scope, element, attrs, ganttCtrl) {\n                    var api = ganttCtrl.gantt.api;\n\n                    // Load options from global options attribute.\n                    if (scope.options && typeof(scope.options.movable) === 'object') {\n                        for (var option in scope.options.movable) {\n                            scope[option] = scope.options[option];\n                        }\n                    }\n\n                    movableOptions.initialize(scope);\n\n                    api.registerEvent('tasks', 'move');\n                    api.registerEvent('tasks', 'moveBegin');\n                    api.registerEvent('tasks', 'moveEnd');\n                    api.registerEvent('tasks', 'resize');\n                    api.registerEvent('tasks', 'resizeBegin');\n                    api.registerEvent('tasks', 'resizeEnd');\n                    api.registerEvent('tasks', 'change');\n\n                    var _hasTouch = ('ontouchstart' in $window) || $window.DocumentTouch && $document[0] instanceof $window.DocumentTouch;\n                    var _pressEvents = 'touchstart mousedown';\n                    var _moveEvents = 'touchmove mousemove';\n                    var _releaseEvents = 'touchend mouseup';\n\n                    var taskWithSmallWidth = 15;\n                    var resizeAreaWidthBig = 5;\n                    var resizeAreaWidthSmall = 3;\n                    var scrollSpeed = 15;\n                    var scrollTriggerDistance = 5;\n                    var mouseStartOffsetX;\n                    var moveStartX;\n\n                    api.directives.on.new(scope, function(directiveName, taskScope, taskElement) {\n                        if (directiveName === 'ganttTask') {\n                            var windowElement = angular.element($window);\n                            var ganttBodyElement = taskScope.row.rowsManager.gantt.body.$element;\n                            var ganttScrollElement = taskScope.row.rowsManager.gantt.scroll.$element;\n\n                            var taskHasBeenChanged = false;\n                            var scrollInterval;\n\n                            var foregroundElement = taskScope.task.getForegroundElement();\n\n                            foregroundElement.on(_pressEvents, function(evt) {\n                                evt.preventDefault();\n                                if (_hasTouch) {\n                                    evt = mouseOffset.getTouch(evt);\n                                }\n                                var taskMovable = taskScope.task.model.movable;\n                                var rowMovable = taskScope.task.row.model.movable;\n\n                                if (typeof(taskMovable) === 'boolean') {\n                                    taskMovable = {enabled: taskMovable};\n                                }\n\n                                if (typeof(rowMovable) === 'boolean') {\n                                    rowMovable = {enabled: rowMovable};\n                                }\n\n                                var enabled = utils.firstProperty([taskMovable, rowMovable], 'enabled', scope.enabled);\n                                if (enabled) {\n                                    var taskOffsetX = mouseOffset.getOffset(evt).x;\n                                    var mode = getMoveMode(taskOffsetX);\n                                    if (mode !== '' && mouseButton.getButton(evt) === 1) {\n                                        var bodyOffsetX = mouseOffset.getOffsetForElement(ganttBodyElement[0], evt).x;\n                                        enableMoveMode(mode, bodyOffsetX);\n                                    }\n                                    taskScope.$digest();\n                                }\n                            });\n\n                            foregroundElement.on('mousemove', function(evt) {\n                                var taskMovable = taskScope.task.model.movable;\n                                var rowMovable = taskScope.task.row.model.movable;\n\n                                if (typeof(taskMovable) === 'boolean') {\n                                    taskMovable = {enabled: taskMovable};\n                                }\n\n                                if (typeof(rowMovable) === 'boolean') {\n                                    rowMovable = {enabled: rowMovable};\n                                }\n\n                                var enabled = utils.firstProperty([taskMovable, rowMovable], 'enabled', scope.enabled);\n                                if (enabled && !taskScope.task.isMoving) {\n                                    var taskOffsetX = mouseOffset.getOffset(evt).x;\n                                    var mode = getMoveMode(taskOffsetX);\n                                    if (mode !== '' && mode !== 'M') {\n                                        foregroundElement.css('cursor', getCursor(mode));\n                                    } else {\n                                        foregroundElement.css('cursor', '');\n                                    }\n                                }\n                            });\n\n                            var handleMove = function(evt) {\n                                if (taskScope.task.isMoving && !taskScope.destroyed) {\n                                    clearScrollInterval();\n                                    moveTask(evt);\n                                    scrollScreen(evt);\n                                }\n                            };\n\n                            var moveTask = function(evt) {\n                                var oldTaskHasBeenChanged = taskHasBeenChanged;\n\n                                var mousePos = mouseOffset.getOffsetForElement(ganttBodyElement[0], evt);\n                                var x = mousePos.x;\n                                taskScope.task.mouseOffsetX = x;\n                                var taskOutOfRange = taskScope.task.row.rowsManager.gantt.options.value('taskOutOfRange');\n\n                                var taskMovable = taskScope.task.model.movable;\n                                var rowMovable = taskScope.task.row.model.movable;\n\n                                if (typeof(taskMovable) === 'boolean') {\n                                    taskMovable = {enabled: taskMovable};\n                                }\n\n                                if (typeof(rowMovable) === 'boolean') {\n                                    rowMovable = {enabled: rowMovable};\n                                }\n\n                                if (taskScope.task.moveMode === 'M') {\n                                    var allowRowSwitching = utils.firstProperty([taskMovable, rowMovable], 'allowRowSwitching', scope.allowRowSwitching);\n                                    if (allowRowSwitching) {\n                                        var scrollRect = ganttScrollElement[0].getBoundingClientRect();\n                                        var rowCenterLeft = scrollRect.left + scrollRect.width / 2;\n\n                                        var targetRowElement = utils.findElementFromPoint(rowCenterLeft, evt.clientY, function(element) {\n                                            return angular.element(element).hasClass('gantt-row');\n                                        });\n                                        var rows = ganttCtrl.gantt.rowsManager.rows;\n                                        var targetRow;\n                                        for (var i= 0, l=rows.length; i<l; i++) {\n                                            if (targetRowElement === rows[i].$element[0]) {\n                                                targetRow = rows[i];\n                                                break;\n                                            }\n                                        }\n\n                                        var sourceRow = taskScope.task.row;\n\n                                        if (targetRow !== undefined && sourceRow !== targetRow) {\n                                            targetRow.moveTaskToRow(taskScope.task, true);\n                                            sourceRow.$scope.$digest();\n                                            targetRow.$scope.$digest();\n                                            taskHasBeenChanged = true;\n                                        }\n                                    }\n\n                                    var allowMoving = utils.firstProperty([taskMovable, rowMovable], 'allowMoving', scope.allowMoving);\n                                    if (allowMoving) {\n                                        x = x - mouseStartOffsetX;\n\n                                        if (taskOutOfRange !== 'truncate') {\n                                            if (x < 0) {\n                                                x = 0;\n                                            } else if (x + taskScope.task.width >= taskScope.gantt.width) {\n                                                x = taskScope.gantt.width - taskScope.task.width;\n                                            }\n                                        }\n\n                                        taskScope.task.moveTo(x, true);\n                                        taskScope.$digest();\n                                        taskScope.row.rowsManager.gantt.api.tasks.raise.move(taskScope.task);\n                                        taskHasBeenChanged = true;\n                                    }\n                                } else if (taskScope.task.moveMode === 'E') {\n                                    if (x <= taskScope.task.left) {\n                                        x = taskScope.task.left;\n                                        taskScope.task.moveMode = 'W';\n                                        setGlobalCursor(getCursor(taskScope.task.moveMode ));\n                                    }\n\n                                    if (taskOutOfRange !== 'truncate' && x >= taskScope.gantt.width) {\n                                        x = taskScope.gantt.width;\n                                    }\n\n                                    taskScope.task.setTo(x, true);\n                                    taskScope.$digest();\n                                    taskScope.row.rowsManager.gantt.api.tasks.raise.resize(taskScope.task);\n                                    taskHasBeenChanged = true;\n                                } else {\n                                    if (x > taskScope.task.left + taskScope.task.width) {\n                                        x = taskScope.task.left + taskScope.task.width;\n                                        taskScope.task.moveMode = 'E';\n                                        setGlobalCursor(getCursor(taskScope.task.moveMode ));\n                                    }\n\n                                    if (taskOutOfRange !== 'truncate' && x < 0) {\n                                        x = 0;\n                                    }\n\n                                    taskScope.task.setFrom(x, true);\n                                    taskScope.$digest();\n                                    taskScope.row.rowsManager.gantt.api.tasks.raise.resize(taskScope.task);\n                                    taskHasBeenChanged = true;\n                                }\n\n                                if (!oldTaskHasBeenChanged && taskHasBeenChanged) {\n                                    var backgroundElement = taskScope.task.getBackgroundElement();\n                                    if (taskScope.task.moveMode === 'M') {\n                                        backgroundElement.addClass('gantt-task-moving');\n                                        taskScope.row.rowsManager.gantt.api.tasks.raise.moveBegin(taskScope.task);\n                                    } else {\n                                        backgroundElement.addClass('gantt-task-resizing');\n                                        taskScope.row.rowsManager.gantt.api.tasks.raise.resizeBegin(taskScope.task);\n                                    }\n                                }\n                            };\n\n                            var scrollScreen = function(evt) {\n                                var mousePos = mouseOffset.getOffsetForElement(ganttBodyElement[0], evt);\n                                var leftScreenBorder = ganttScrollElement[0].scrollLeft;\n                                var screenWidth = ganttScrollElement[0].offsetWidth;\n                                var scrollWidth = ganttScrollElement[0].scrollWidth;\n                                var rightScreenBorder = leftScreenBorder + screenWidth;\n                                var keepOnScrolling = false;\n\n                                if (mousePos.x < moveStartX) {\n                                    // Scroll to the left\n                                    if (leftScreenBorder > 0 && mousePos.x <= leftScreenBorder + scrollTriggerDistance) {\n                                        mousePos.x -= scrollSpeed;\n                                        keepOnScrolling = true;\n                                        taskScope.row.rowsManager.gantt.api.scroll.left(scrollSpeed);\n                                    }\n                                } else {\n                                    // Scroll to the right\n                                    if (rightScreenBorder < scrollWidth && mousePos.x >= rightScreenBorder - scrollTriggerDistance) {\n                                        mousePos.x += scrollSpeed;\n                                        keepOnScrolling = true;\n                                        taskScope.row.rowsManager.gantt.api.scroll.right(scrollSpeed);\n                                    }\n                                }\n\n                                if (keepOnScrolling) {\n                                    scrollInterval = $timeout(function() {\n                                        handleMove(evt);\n                                    }, 100, true);\n                                }\n                            };\n\n                            var clearScrollInterval = function() {\n                                if (scrollInterval !== undefined) {\n                                    $timeout.cancel(scrollInterval);\n                                    scrollInterval = undefined;\n                                }\n                            };\n\n                            var getMoveMode = function(x) {\n                                var distance = 0;\n\n\n                                var taskMovable = taskScope.task.model.movable;\n                                var rowMovable = taskScope.task.row.model.movable;\n\n                                if (typeof(taskMovable) === 'boolean') {\n                                    taskMovable = {enabled: taskMovable};\n                                }\n\n                                if (typeof(rowMovable) === 'boolean') {\n                                    rowMovable = {enabled: rowMovable};\n                                }\n\n                                var allowResizing = utils.firstProperty([taskMovable, rowMovable], 'allowResizing', scope.allowResizing);\n                                var allowRowSwitching = utils.firstProperty([taskMovable, rowMovable], 'allowRowSwitching', scope.allowRowSwitching);\n                                var allowMoving = utils.firstProperty([taskMovable, rowMovable], 'allowMoving', scope.allowMoving);\n\n                                // Define resize&move area. Make sure the move area does not get too small.\n                                if (allowResizing) {\n                                    distance = foregroundElement[0].offsetWidth < taskWithSmallWidth ? resizeAreaWidthSmall : resizeAreaWidthBig;\n                                }\n\n                                if (allowResizing && x > foregroundElement[0].offsetWidth - distance) {\n                                    return 'E';\n                                } else if (allowResizing && x < distance) {\n                                    return 'W';\n                                } else if ((allowMoving || allowRowSwitching) && x >= distance && x <= foregroundElement[0].offsetWidth - distance) {\n                                    return 'M';\n                                } else {\n                                    return '';\n                                }\n                            };\n\n                            var getCursor = function(mode) {\n                                switch (mode) {\n                                    case 'E':\n                                        return 'e-resize';\n                                    case 'W':\n                                        return 'w-resize';\n                                    case 'M':\n                                        return 'move';\n                                }\n                            };\n\n                            var setGlobalCursor = function(cursor) {\n                                taskElement.css('cursor', cursor);\n                                angular.element($document[0].body).css({\n                                 '-moz-user-select': cursor === '' ? '': '-moz-none',\n                                 '-webkit-user-select': cursor === '' ? '': 'none',\n                                 '-ms-user-select': cursor === '' ? '': 'none',\n                                 'user-select': cursor === '' ? '': 'none',\n                                 'cursor': cursor\n                                 });\n                            };\n\n                            var enableMoveMode = function(mode, x) {\n                                // Clone taskModel\n                                if (taskScope.task.originalModel === undefined) {\n                                    taskScope.task.originalRow = taskScope.task.row;\n                                    taskScope.task.originalModel = taskScope.task.model;\n                                    taskScope.task.model = angular.copy(taskScope.task.originalModel);\n                                }\n\n                                // Init mouse start variables (if tasks was not move from another row)\n                                if (!taskScope.task.isMoving && !taskScope.task.isResizing) {\n                                    moveStartX = x;\n                                    mouseStartOffsetX = x - taskScope.task.modelLeft;\n                                }\n\n                                // Init task move\n                                taskHasBeenChanged = false;\n                                taskScope.task.moveMode = mode;\n                                taskScope.task.isMoving = true;\n                                taskScope.task.active = true;\n\n                                // Add move event handler\n                                var taskMoveHandler = function(evt) {\n                                    evt.stopImmediatePropagation();\n                                    if (_hasTouch) {\n                                        evt = mouseOffset.getTouch(evt);\n                                    }\n\n                                    handleMove(evt);\n                                };\n                                var moveSmartEvent = smartEvent(taskScope, windowElement, _moveEvents, taskMoveHandler);\n                                moveSmartEvent.bind();\n\n                                // Remove move event handler on mouse up / touch end\n                                smartEvent(taskScope, windowElement, _releaseEvents, function(evt) {\n                                    if (_hasTouch) {\n                                        evt = mouseOffset.getTouch(evt);\n                                    }\n                                    moveSmartEvent.unbind();\n                                    disableMoveMode(evt);\n                                    taskScope.$digest();\n                                }).bindOnce();\n\n                                setGlobalCursor(getCursor(mode));\n                            };\n\n                            var disableMoveMode = function() {\n                                var getBackgroundElement = taskScope.task.getBackgroundElement();\n                                getBackgroundElement.removeClass('gantt-task-moving');\n                                getBackgroundElement.removeClass('gantt-task-resizing');\n\n                                if (taskScope.task.originalModel !== undefined) {\n                                    angular.extend(taskScope.task.originalModel, taskScope.task.model);\n                                    taskScope.task.model = taskScope.task.originalModel;\n                                    if (taskScope.task.row.model.id !== taskScope.task.originalRow.model.id) {\n                                        var targetRow = taskScope.task.row;\n                                        targetRow.removeTask(taskScope.task.model.id, false, true);\n                                        taskScope.task.row = taskScope.task.originalRow;\n                                        targetRow.moveTaskToRow(taskScope.task, false);\n                                    }\n                                    delete taskScope.task.originalModel;\n                                    delete taskScope.task.originalRow;\n\n                                    taskScope.$apply();\n                                }\n\n                                taskScope.task.isMoving = false;\n                                taskScope.task.active = false;\n\n                                // Stop any active auto scroll\n                                clearScrollInterval();\n\n                                // Set mouse cursor back to default\n                                setGlobalCursor('');\n\n                                // Raise task changed event\n                                if (taskHasBeenChanged === true) {\n                                    // Raise move end event\n                                    if (taskScope.task.moveMode === 'M') {\n                                        taskScope.row.rowsManager.gantt.api.tasks.raise.moveEnd(taskScope.task);\n                                    } else {\n                                        taskScope.row.rowsManager.gantt.api.tasks.raise.resizeEnd(taskScope.task);\n                                    }\n\n                                    taskHasBeenChanged = false;\n                                    taskScope.task.row.sortTasks(); // Sort tasks so they have the right z-order\n                                    taskScope.row.rowsManager.gantt.api.tasks.raise.change(taskScope.task);\n                                }\n\n                                taskScope.task.moveMode = undefined;\n                            };\n\n                            // Stop scroll cycle (if running) when scope is destroyed.\n                            // This is needed when the task is moved to a new row during scroll because\n                            // the old scope will continue to scroll otherwise\n                            taskScope.$on('$destroy', function() {\n                                taskScope.destroyed = true;\n                                clearScrollInterval();\n                            });\n\n                            if (taskScope.task.isResizing) {\n                                enableMoveMode('E', taskScope.task.mouseOffsetX);\n                                delete taskScope.task.isResizing;\n                            } else if (taskScope.task.isMoving) {\n                                // In case the task has been moved to another row a new controller is is created by angular.\n                                // Enable the move mode again if this was the case.\n                                enableMoveMode('M', taskScope.task.mouseOffsetX);\n                            }\n                        }\n                    });\n                }\n            };\n        }]);\n}());\n\n","(function(){\n    'use strict';\n    angular.module('gantt.movable').factory('ganttMovableOptions', [function() {\n        return {\n            initialize: function(options) {\n\n                options.enabled = options.enabled !== undefined ? !!options.enabled : true;\n                options.allowMoving = options.allowMoving !== undefined ? !!options.allowMoving : true;\n                options.allowResizing = options.allowResizing !== undefined ? !!options.allowResizing : true;\n                options.allowRowSwitching = options.allowRowSwitching !== undefined ? !!options.allowRowSwitching : true;\n\n                return options;\n            }\n        };\n    }]);\n}());\n\n"]}