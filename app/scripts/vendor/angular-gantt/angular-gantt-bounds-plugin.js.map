{"version":3,"sources":["../src/plugins/bounds.js","../src/plugins/bounds/taskBounds.directive.js"],"names":[],"mappings":"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","file":"angular-gantt-bounds-plugin.js","sourcesContent":["(function(){\n    'use strict';\n    angular.module('gantt.bounds', ['gantt', 'gantt.bounds.templates']).directive('ganttBounds', ['moment', '$compile', '$document', function(moment, $compile, $document) {\n        return {\n            restrict: 'E',\n            require: '^gantt',\n            scope: {\n                enabled: '=?'\n            },\n            link: function(scope, element, attrs, ganttCtrl) {\n                var api = ganttCtrl.gantt.api;\n\n                // Load options from global options attribute.\n                if (scope.options && typeof(scope.options.bounds) === 'object') {\n                    for (var option in scope.options.bounds) {\n                        scope[option] = scope.options[option];\n                    }\n                }\n\n                if (scope.enabled === undefined) {\n                    scope.enabled = true;\n                }\n\n                api.directives.on.new(scope, function(directiveName, taskScope, taskElement) {\n                    if (directiveName === 'ganttTask') {\n                        var boundsScope = taskScope.$new();\n                        boundsScope.pluginScope = scope;\n\n                        var ifElement = $document[0].createElement('div');\n                        angular.element(ifElement).attr('data-ng-if', 'task.model.est && task.model.lct && pluginScope.enabled');\n                        var boundsElement = $document[0].createElement('gantt-task-bounds');\n                        if (attrs.templateUrl !== undefined) {\n                            angular.element(boundsElement).attr('data-template-url', attrs.templateUrl);\n                        }\n                        if (attrs.template !== undefined) {\n                            angular.element(boundsElement).attr('data-template', attrs.template);\n                        }\n                        angular.element(ifElement).append(boundsElement);\n                        taskElement.append($compile(ifElement)(boundsScope));\n                    }\n                });\n\n                api.tasks.on.clean(scope, function(model) {\n                    if (model.est !== undefined && !moment.isMoment(model.est)) {\n                        model.est = moment(model.est);  //Earliest Start Time\n                    }\n                    if (model.lct !== undefined && !moment.isMoment(model.lct)) {\n                        model.lct = moment(model.lct);  //Latest Completion Time\n                    }\n                });\n            }\n        };\n    }]);\n}());\n\n","(function(){\n    'use strict';\n    angular.module('gantt.bounds').directive('ganttTaskBounds', ['$templateCache', 'moment', function($templateCache, moment) {\n        // Displays a box representing the earliest allowable start time and latest completion time for a job\n\n        return {\n            restrict: 'E',\n            templateUrl: function(tElement, tAttrs) {\n                var templateUrl;\n                if (tAttrs.templateUrl === undefined) {\n                    templateUrl = 'plugins/bounds/taskBounds.tmpl.html';\n                } else {\n                    templateUrl = tAttrs.templateUrl;\n                }\n                if (tAttrs.template) {\n                    $templateCache.put(templateUrl, tAttrs.template);\n                }\n                return templateUrl;\n            },\n            replace: true,\n            scope: true,\n            controller: ['$scope', '$element', function($scope, $element) {\n                $element.toggleClass('ng-hide', true);\n\n                $scope.simplifyMoment = function(d) {\n                    return moment.isMoment(d) ? d.unix() : d;\n                };\n\n                $scope.$watchGroup(['simplifyMoment(task.model.est)', 'simplifyMoment(task.model.lct)', 'task.left', 'task.width'], function() {\n                    var left = $scope.task.rowsManager.gantt.getPositionByDate($scope.task.model.est);\n                    var right = $scope.task.rowsManager.gantt.getPositionByDate($scope.task.model.lct);\n\n                    $element.css('left', left - $scope.task.left + 'px');\n                    $element.css('width', right - left + 'px');\n\n                    $element.toggleClass('gantt-task-bounds-in', false);\n                    $element.toggleClass('gantt-task-bounds-out', false);\n                    if ($scope.task.model.est === undefined || $scope.task.model.lct === undefined) {\n                        $element.toggleClass('gantt-task-bounds-in', true);\n                    } else if ($scope.task.model.est > $scope.task.model.from) {\n                        $element.toggleClass('gantt-task-bounds-out', true);\n                    }\n                    else if ($scope.task.model.lct < $scope.task.model.to) {\n                        $element.toggleClass('gantt-task-bounds-out', true);\n                    } else {\n                        $element.toggleClass('gantt-task-bounds-in', true);\n                    }\n                });\n\n                $scope.task.$element.bind('mouseenter', function() {\n                    $element.toggleClass('ng-hide', false);\n                });\n\n                $scope.task.$element.bind('mouseleave', function() {\n                    $element.toggleClass('ng-hide', true);\n                });\n\n                $scope.task.rowsManager.gantt.api.directives.raise.new('ganttBounds', $scope, $element);\n                $scope.$on('$destroy', function() {\n                    $scope.task.rowsManager.gantt.api.directives.raise.destroy('ganttBounds', $scope, $element);\n                });\n            }]\n        };\n    }]);\n}());\n\n"]}