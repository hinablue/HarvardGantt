{"version":3,"sources":["../src/plugins/progress.js","../src/plugins/progress/taskProgress.directive.js"],"names":[],"mappings":"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","file":"angular-gantt-progress-plugin.js","sourcesContent":["(function(){\n    'use strict';\n    angular.module('gantt.progress', ['gantt', 'gantt.progress.templates']).directive('ganttProgress', ['moment', '$compile', '$document', function(moment, $compile, $document) {\n        return {\n            restrict: 'E',\n            require: '^gantt',\n            scope: {\n                enabled: '=?'\n            },\n            link: function(scope, element, attrs, ganttCtrl) {\n                var api = ganttCtrl.gantt.api;\n\n                // Load options from global options attribute.\n                if (scope.options && typeof(scope.options.progress) === 'object') {\n                    for (var option in scope.options.progress) {\n                        scope[option] = scope.options[option];\n                    }\n                }\n\n                if (scope.enabled === undefined) {\n                    scope.enabled = true;\n                }\n\n                api.directives.on.new(scope, function(directiveName, taskScope, taskElement) {\n                    if (directiveName === 'ganttTaskBackground') {\n                        var progressScope = taskScope.$new();\n                        progressScope.pluginScope = scope;\n\n                        var ifElement = $document[0].createElement('div');\n                        angular.element(ifElement).attr('data-ng-if', 'task.model.progress !== undefined && pluginScope.enabled');\n\n                        var progressElement = $document[0].createElement('gantt-task-progress');\n                        if (attrs.templateUrl !== undefined) {\n                            angular.element(progressElement).attr('data-template-url', attrs.templateUrl);\n                        }\n                        if (attrs.template !== undefined) {\n                            angular.element(progressElement).attr('data-template', attrs.template);\n                        }\n                        angular.element(ifElement).append(progressElement);\n                        taskElement.append($compile(ifElement)(progressScope));\n                    }\n                });\n\n                api.tasks.on.clean(scope, function(model) {\n                    if (model.est !== undefined && !moment.isMoment(model.est)) {\n                        model.est = moment(model.est); //Earliest Start Time\n                    }\n\n                    if (model.lct !== undefined && !moment.isMoment(model.lct)) {\n                        model.lct = moment(model.lct); //Latest Completion Time\n                    }\n                });\n            }\n        };\n    }]);\n}());\n\n","(function(){\n    'use strict';\n    angular.module('gantt.progress').directive('ganttTaskProgress', ['$templateCache', function($templateCache) {\n        return {\n            restrict: 'E',\n            requires: '^ganttTask',\n            templateUrl: function(tElement, tAttrs) {\n                var templateUrl;\n                if (tAttrs.templateUrl === undefined) {\n                    templateUrl = 'plugins/progress/taskProgress.tmpl.html';\n                } else {\n                    templateUrl = tAttrs.templateUrl;\n                }\n                if (tAttrs.template !== undefined) {\n                    $templateCache.put(templateUrl, tAttrs.template);\n                }\n                return templateUrl;\n            },\n            replace: true,\n            scope: true,\n            controller: ['$scope', '$element', function($scope, $element) {\n                $scope.getClasses = function() {\n                    var classes = [];\n\n                    if (typeof($scope.task.model.progress) === 'object') {\n                        classes = $scope.task.model.progress.classes;\n                    }\n\n                    return classes;\n                };\n\n                $scope.getCss = function() {\n                    var css = {};\n\n                    var progress;\n                    if ($scope.task.model.progress !== undefined) {\n                        if (typeof($scope.task.model.progress) === 'object') {\n                            progress = $scope.task.model.progress;\n                        } else {\n                            progress = {percent: $scope.task.model.progress};\n                        }\n                    }\n\n                    if (progress) {\n                        if (progress.color) {\n                            css['background-color'] = progress.color;\n                        } else {\n                            css['background-color'] = '#6BC443';\n                        }\n\n                        css.width = progress.percent + '%';\n                    }\n\n                    return css;\n                };\n\n                $scope.task.rowsManager.gantt.api.directives.raise.new('ganttTaskProgress', $scope, $element);\n                $scope.$on('$destroy', function() {\n                    $scope.task.rowsManager.gantt.api.directives.raise.destroy('ganttTaskProgress', $scope, $element);\n                });\n            }]\n        };\n    }]);\n}());\n\n"]}